这是基于UDP的socket programming，程序分为Client.java和Server.java，其中Client.java是客户端程序，在主机的命令行下运行，Server.java是服务端程序，在虚拟机的终端下运行。
主机为windows系统，虚拟机为ubuntu-20.04.1版本。
首先启动Server端，等待客户端请求连接。
启动客户端时需输入服务端的IP和端口号，程序会自动建立连接，模拟TCP三次握手，若连接成功，服务端会提示客户端的IP和端口号，客户端则会等待发送报文的相关信息。
在命令行界面输入报文数量，由于序列号为2字节大小，因此报文数量限定为1-96（除去建立和释放连接的报文数）。
在命令行界面输入传输报文的速率，建议的每个报文传输的时间间隔大小为1-1000ms之间。
根据输入的相关信息，报文传输完成后会给出此次通信的具体信息，如接收到包的数量、丢包率、RTT、系统响应时间等。
随后客户端请求断开连接，模拟TCP四次挥手，若成功释放连接，服务端同样会提示客户端的IP和端口号，客户端程序结束。
若要关闭服务端，在虚拟机终端输入end即可关闭。
client->server报文格式：2字节的序列号、1字节的版本号（定为2）、3字节的标志位（分别为SYN、FIN、ACK）、16字节的无意义序列，总长22字节
server->client报文格式：2字节的序列号、1字节的版本号（定为2）、3字节的标志位（分别为SYN、FIN、ACK）、6字节的系统时间，总长12字节